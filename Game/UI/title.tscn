[gd_scene load_steps=61 format=3 uid="uid://dtjthk07jpugb"]

[ext_resource type="Texture2D" uid="uid://1gsgwrxvici6" path="res://Assets/Environment/Objects/Foliage.png" id="1_ckhxw"]
[ext_resource type="Texture2D" uid="uid://cvac1rhk2c816" path="res://Assets/Characters/Friendly/MikoSweep.png" id="1_t67nd"]
[ext_resource type="Script" path="res://Game/UI/title.gd" id="1_xhony"]
[ext_resource type="Texture2D" uid="uid://cjqp7qxkqaotd" path="res://Assets/Environment/Objects/Shrine.png" id="2_2j4ax"]
[ext_resource type="AudioStream" uid="uid://mb7cdnj4wwov" path="res://Assets/Audio/UI/Sweep_1.mp3" id="2_pckjq"]
[ext_resource type="PackedScene" uid="uid://bat17sfqaplx7" path="res://Assets/Shaders/sakuratree.tscn" id="2_vga1q"]
[ext_resource type="Texture2D" uid="uid://jrqfo2tf2gf7" path="res://Assets/Weapons/Broom.png" id="2_wmbyw"]
[ext_resource type="Texture2D" uid="uid://6spl2drkii4x" path="res://Assets/UserInterface/Menu/Brush.png" id="3_1utxv"]
[ext_resource type="AudioStream" uid="uid://bc0dxvitr4786" path="res://Assets/Audio/UI/Sweep_2.mp3" id="3_25d4v"]
[ext_resource type="Texture2D" uid="uid://buuibqrotwlwv" path="res://Assets/UserInterface/Menu/MirrorMiko.png" id="4_6jovv"]
[ext_resource type="AudioStream" uid="uid://big5x8trmvttm" path="res://Assets/Audio/UI/Sweep_3.mp3" id="4_6nr5b"]
[ext_resource type="AudioStream" uid="uid://crm6plc1gethq" path="res://Assets/Audio/UI/Kappa_Kacophony.mp3" id="5_orp8j"]
[ext_resource type="Script" path="res://Game/UI/miko_shivering.gd" id="6_l5kyv"]
[ext_resource type="PackedScene" uid="uid://domnit2msh3jg" path="res://Assets/Shaders/god_ray.tscn" id="7_4v4wb"]
[ext_resource type="Texture2D" uid="uid://cl06vw6rxuxd" path="res://Assets/Effects/Particles/Dust.png" id="8_3auyt"]
[ext_resource type="Texture2D" uid="uid://dl6vgtmiqsoxv" path="res://Assets/Environment/Objects/BarrelBack.png" id="9_epeak"]
[ext_resource type="Texture2D" uid="uid://cp1i2rrme4saq" path="res://Assets/Environment/Objects/Petals.png" id="9_od2by"]
[ext_resource type="Texture2D" uid="uid://ddaymdx33rqq5" path="res://Assets/Environment/Objects/Barrel.png" id="9_qkset"]
[ext_resource type="Texture2D" uid="uid://cwaw64yq1y8gd" path="res://Assets/Environment/Objects/BarrelLid.png" id="10_q7tfm"]
[ext_resource type="FontFile" uid="uid://cyw64jny6507f" path="res://Assets/Fonts/ZeroGothic.otf" id="11_6i0x2"]
[ext_resource type="Texture2D" uid="uid://ulmebv12bmbk" path="res://Assets/UserInterface/Menu/beretparadelogo.png" id="11_t3nwi"]
[ext_resource type="Texture2D" uid="uid://cq5ska04qidhg" path="res://Assets/UserInterface/Menu/Music.png" id="15_nsuj6"]
[ext_resource type="Texture2D" uid="uid://u23t433su4c6" path="res://Assets/UserInterface/Menu/Sound.png" id="16_6tcal"]
[ext_resource type="Texture2D" uid="uid://lf5ircidgcgc" path="res://Assets/Characters/Hostile/Kappa_full_anim.png" id="18_y8ji2"]
[ext_resource type="PackedScene" uid="uid://b5wuajjdswd23" path="res://Assets/Effects/transition.tscn" id="22_4jrs0"]
[ext_resource type="Texture2D" uid="uid://bjx2labdxfhtt" path="res://Assets/UserInterface/Menu/FlameTransition.png" id="24_6mb7l"]

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_p2qx4"]
streams_count = 3
stream_0/stream = ExtResource("2_pckjq")
stream_1/stream = ExtResource("3_25d4v")
stream_2/stream = ExtResource("4_6nr5b")

[sub_resource type="Animation" id="Animation_w1x0l"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Beretparadelogo:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("WorldEnvironment:environment:adjustment_enabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("ColorRect:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("WorldEnvironment:environment:glow_intensity")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.78]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("WorldEnvironment:environment:glow_bloom")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.16]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("ColorRect:mouse_filter")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("SFXbutt:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("BGMbutt:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Brush:position")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1121, 492)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("SFXbutt:position")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1207, 579)]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("BGMbutt:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1207, 648)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("MikoSweep:rotation")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("Transition2:mouse_filter")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [2]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("WorldEnvironment:environment:glow_enabled")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_6xxa5"]
resource_name = "Start"
length = 5.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Beretparadelogo:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1, 2.5, 3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [Color(0.0500002, 0, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(0.00999999, 0.0265002, 1, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("WorldEnvironment:environment:adjustment_enabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 3.33333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("ColorRect:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 3.33333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("WorldEnvironment:environment:glow_intensity")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(3.3, 3.33333, 5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 8.0, 0.78]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("WorldEnvironment:environment:glow_bloom")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(3.3, 3.33333, 5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 1.0, 0.16]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("ColorRect:mouse_filter")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 5),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 2]
}
tracks/6/type = "method"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath(".")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0.333333, 1.9, 3.36667, 4.13333, 4.9, 5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"values": [{
"args": [],
"method": &"LogoSFX"
}, {
"args": [],
"method": &"bereparedo"
}, {
"args": [],
"method": &"WashSFX"
}, {
"args": [],
"method": &"Start_sweep"
}, {
"args": [],
"method": &"EnableClick"
}, {
"args": [],
"method": &"TitleMusic"
}]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("SFXbutt:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 3.33333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("BGMbutt:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 3.33333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("Brush:position")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1121, 492)]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("SFXbutt:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1207, 579)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("BGMbutt:position")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1207, 648)]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("MikoSweep:rotation")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("Transition2:mouse_filter")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [2]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("WorldEnvironment:environment:glow_enabled")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_5gt7b"]
_data = {
"RESET": SubResource("Animation_w1x0l"),
"Start": SubResource("Animation_6xxa5")
}

[sub_resource type="Animation" id="Animation_dnkfm"]
resource_name = "Main_Cutscene"
length = 28.0
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Brush:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(5.46416, 1),
"update": 0,
"values": [Vector2(1121, 492), Vector2(1721, 492)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("SFXbutt:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(5.46416, 1),
"update": 0,
"values": [Vector2(1207, 579), Vector2(1807, 579)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("BGMbutt:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(5.46416, 1),
"update": 0,
"values": [Vector2(1207, 648), Vector2(1807, 648)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Camera2D2:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.8, 3, 10.5, 11, 12, 13, 15, 17.5, 18.5, 24.6, 26.6),
"transitions": PackedFloat32Array(1, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(640, 360), Vector2(640, 360), Vector2(635, 459), Vector2(635, 459), Vector2(785, 459), Vector2(785, 459), Vector2(835, 459), Vector2(835, 459), Vector2(895, 459), Vector2(819.685, 459), Vector2(819.685, 459), Vector2(640, 360)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Camera2D2:zoom")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.8, 3, 10.5, 11, 12, 13, 15, 18, 18.5, 24.6, 26.6),
"transitions": PackedFloat32Array(1, 0.233259, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1.4, 1.4), Vector2(1.4, 1.4), Vector2(1.5, 1.5), Vector2(1.5, 1.5), Vector2(1.6, 1.6), Vector2(1.6, 1.6), Vector2(1.8, 1.8), Vector2(1.4, 1.4), Vector2(1.4, 1.4), Vector2(1, 1)]
}
tracks/5/type = "method"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath(".")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(3.5, 4, 5.5, 8.4, 9.4, 18, 22.5, 23.3),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"values": [{
"args": [],
"method": &"BarrelSequence"
}, {
"args": [],
"method": &"SweepStop"
}, {
"args": [],
"method": &"BarrelSequence"
}, {
"args": [],
"method": &"BarrelSequence"
}, {
"args": [],
"method": &"MikoShiver"
}, {
"args": [],
"method": &"SurpriseKappa"
}, {
"args": [],
"method": &"Escape"
}, {
"args": [],
"method": &"Kacophany"
}]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("MikoSweep:frame")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 6.8, 8.5, 9.5, 18),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("MikoSweep/Broom:rotation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(7.5, 8.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, -1.5708]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("MikoSweep/Broom:position")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(7.5, 8.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(-1.25, 9), Vector2(-14.5, 21)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("MikoSweep/Broom:offset")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(6),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.25, -10)]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("MikoSweep/Broom:modulate")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(8.3, 8.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("MikoSweep:position")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(8.5, 9, 9.5, 10.5, 11, 12, 13, 15, 18, 18.5, 19, 19.2, 20, 20.4, 20.6, 21.4, 21.7, 21.9, 22.1, 22.5, 26),
"transitions": PackedFloat32Array(0.366021, 3.03143, 1, 0.517632, 1, 0.517632, 1, 0.517632, 0.366021, 3.03143, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(382, 543), Vector2(382, 439.755), Vector2(382, 543), Vector2(382, 543), Vector2(532, 543), Vector2(532, 543), Vector2(682, 543), Vector2(682, 543), Vector2(832, 543), Vector2(832, 439.755), Vector2(832, 543), Vector2(832, 543), Vector2(865.09, 543), Vector2(865.09, 543), Vector2(931.08, 543), Vector2(931.08, 543), Vector2(901, 511), Vector2(898, 525), Vector2(898, 520), Vector2(898, 520), Vector2(1698, 520)]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("KappaFullAnim:visible")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0, 17.4, 18),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, false, true]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("Barrel:frame")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0, 17.4, 18),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [0, 0, 1]
}
tracks/14/type = "method"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("MikoSweep")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(19),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"Shiver"
}]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("KappaFullAnim:z_index")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(18, 19),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 2]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("KappaFullAnim:position")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(18, 18.9, 19, 19.2, 21.4, 21.7, 21.9, 22.5, 26),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(950, 544), Vector2(950, 544), Vector2(950, 567.395), Vector2(897.905, 567.395), Vector2(897.905, 567.395), Vector2(897.905, 559.29), Vector2(897.905, 565.81), Vector2(897.905, 565.81), Vector2(1697.91, 565.81)]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("KappaFullAnim:frame")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(18, 19.1, 20.4, 20.6),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 10, 10, 20]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("KappaFullAnim/BarrelLid:self_modulate")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(18.6, 19.1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/19/type = "value"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath("MikoSweep:rotation")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(0, 20, 20.2, 20.4, 20.6, 21.4, 21.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.53058, 0.53058, -0.53058, -0.53058, -1.5708]
}
tracks/20/type = "value"
tracks/20/imported = false
tracks/20/enabled = true
tracks/20/path = NodePath("Barrel:z_index")
tracks/20/interp = 1
tracks/20/loop_wrap = true
tracks/20/keys = {
"times": PackedFloat32Array(16.6),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/21/type = "value"
tracks/21/imported = false
tracks/21/enabled = true
tracks/21/path = NodePath("MikoSweep:z_index")
tracks/21/interp = 1
tracks/21/loop_wrap = true
tracks/21/keys = {
"times": PackedFloat32Array(16.6, 18.7),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 1]
}
tracks/22/type = "value"
tracks/22/imported = false
tracks/22/enabled = true
tracks/22/path = NodePath("KappaFullAnim2:position")
tracks/22/interp = 1
tracks/22/loop_wrap = true
tracks/22/keys = {
"times": PackedFloat32Array(17.6, 22.5, 26),
"transitions": PackedFloat32Array(0.466516, 1, 1),
"update": 0,
"values": [Vector2(-260, 567), Vector2(810, 567), Vector2(1610, 567)]
}
tracks/23/type = "value"
tracks/23/imported = false
tracks/23/enabled = true
tracks/23/path = NodePath("WorldEnvironment:environment:glow_bloom")
tracks/23/interp = 1
tracks/23/loop_wrap = true
tracks/23/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.16]
}
tracks/24/type = "value"
tracks/24/imported = false
tracks/24/enabled = true
tracks/24/path = NodePath("WorldEnvironment:environment:glow_intensity")
tracks/24/interp = 1
tracks/24/loop_wrap = true
tracks/24/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.78]
}
tracks/25/type = "value"
tracks/25/imported = false
tracks/25/enabled = true
tracks/25/path = NodePath("WorldEnvironment:environment:adjustment_enabled")
tracks/25/interp = 1
tracks/25/loop_wrap = true
tracks/25/keys = {
"times": PackedFloat32Array(20.8),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/26/type = "value"
tracks/26/imported = false
tracks/26/enabled = true
tracks/26/path = NodePath("Transition2:material:shader_parameter/scale")
tracks/26/interp = 1
tracks/26/loop_wrap = true
tracks/26/keys = {
"times": PackedFloat32Array(26.4, 28),
"transitions": PackedFloat32Array(3.86374, 1),
"update": 0,
"values": [0.0, 1.0]
}
tracks/27/type = "value"
tracks/27/imported = false
tracks/27/enabled = true
tracks/27/path = NodePath("WorldEnvironment:environment:glow_enabled")
tracks/27/interp = 1
tracks/27/loop_wrap = true
tracks/27/keys = {
"times": PackedFloat32Array(0, 27.2),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="Animation" id="Animation_rac0d"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Brush:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1721, 492)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("SFXbutt:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1207, 579)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("BGMbutt:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1207, 648)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Camera2D2:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(640, 360)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Camera2D2:zoom")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("MikoSweep:frame")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("MikoSweep/Broom:rotation")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("MikoSweep/Broom:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-1.25, 9)]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("MikoSweep/Broom:offset")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2.25, -10)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("MikoSweep/Broom:modulate")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("MikoSweep:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(382, 543)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("KappaFullAnim:visible")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("Barrel:frame")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("KappaFullAnim:z_index")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("KappaFullAnim:position")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(950, 544)]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("KappaFullAnim:frame")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/16/type = "value"
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/path = NodePath("KappaFullAnim/BarrelLid:self_modulate")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/17/type = "value"
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/path = NodePath("MikoSweep:rotation")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.53058]
}
tracks/18/type = "value"
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/path = NodePath("Barrel:z_index")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/19/type = "value"
tracks/19/imported = false
tracks/19/enabled = true
tracks/19/path = NodePath("MikoSweep:z_index")
tracks/19/interp = 1
tracks/19/loop_wrap = true
tracks/19/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/20/type = "value"
tracks/20/imported = false
tracks/20/enabled = true
tracks/20/path = NodePath("KappaFullAnim2:position")
tracks/20/interp = 1
tracks/20/loop_wrap = true
tracks/20/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-260, 567)]
}
tracks/21/type = "value"
tracks/21/imported = false
tracks/21/enabled = true
tracks/21/path = NodePath("WorldEnvironment:environment:glow_bloom")
tracks/21/interp = 1
tracks/21/loop_wrap = true
tracks/21/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.16]
}
tracks/22/type = "value"
tracks/22/imported = false
tracks/22/enabled = true
tracks/22/path = NodePath("WorldEnvironment:environment:glow_intensity")
tracks/22/interp = 1
tracks/22/loop_wrap = true
tracks/22/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.78]
}
tracks/23/type = "value"
tracks/23/imported = false
tracks/23/enabled = true
tracks/23/path = NodePath("WorldEnvironment:environment:adjustment_enabled")
tracks/23/interp = 1
tracks/23/loop_wrap = true
tracks/23/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/24/type = "value"
tracks/24/imported = false
tracks/24/enabled = true
tracks/24/path = NodePath("Transition2:material:shader_parameter/scale")
tracks/24/interp = 1
tracks/24/loop_wrap = true
tracks/24/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/25/type = "value"
tracks/25/imported = false
tracks/25/enabled = true
tracks/25/path = NodePath("WorldEnvironment:environment:glow_enabled")
tracks/25/interp = 1
tracks/25/loop_wrap = true
tracks/25/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_6eflu"]
_data = {
"Main_Cutscene": SubResource("Animation_dnkfm"),
"RESET": SubResource("Animation_rac0d")
}

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5j0b3"]

[sub_resource type="Shader" id="Shader_ee6l2"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xt8vo"]
resource_local_to_scene = true
shader = SubResource("Shader_ee6l2")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_y5tpq"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_dvxt8"]
resource_local_to_scene = true
shader = SubResource("Shader_y5tpq")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.061
shader_parameter/maxStrength = 0.224
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 1.5
shader_parameter/detail = 1.0
shader_parameter/distortion = 1.0
shader_parameter/heightOffset = 0.584
shader_parameter/offset = 0.0

[sub_resource type="Animation" id="Animation_cxu1q"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Broom:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Dust2:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Dust2:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(4, 4)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Dust2:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../Dust2:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0.78, 0.61789, 0.4446, 0.941176)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Dust2:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(441, 633)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../Dust:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Dust:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0.78, 0.61789, 0.4446, 0.941176)]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("../Dust:scale")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1.6875, 1.6875)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("../Dust:rotation")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("../Dust:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(334, 639)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath(".:offset")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("AnimationPlayer:speed_scale")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4.0]
}

[sub_resource type="Animation" id="Animation_newh3"]
resource_name = "Shiver"
length = 2.0
loop_mode = 1
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5, 1, 1.5, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(2, 0), Vector2(0, 0), Vector2(-2, 0), Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AnimationPlayer:speed_scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [4.0]
}

[sub_resource type="Animation" id="Animation_1je5g"]
resource_name = "sweep"
length = 2.0
loop_mode = 1
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Broom:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5, 1, 1.5),
"transitions": PackedFloat32Array(0.196146, 3.13834, 0.203063, 2.46229),
"update": 0,
"values": [0.0, -0.645772, 0.0, 0.645772]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Dust2:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.1, 0.9),
"transitions": PackedFloat32Array(2.21915, 1),
"update": 1,
"values": [true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Dust2:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.1, 0.9),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1.8125, 1.8125), Vector2(2.99647, 2.99647)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Dust2:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.1, 0.9),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.06116]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../Dust2:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.1, 0.9),
"transitions": PackedFloat32Array(3.13834, 1),
"update": 0,
"values": [Color(0.78, 0.61789, 0.4446, 0.941176), Color(0.78, 0.61789, 0.4446, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Dust2:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0.1, 0.9),
"transitions": PackedFloat32Array(0.353554, 1),
"update": 0,
"values": [Vector2(441, 633), Vector2(484, 625)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../Dust:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 1.1, 1.7),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Dust:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(1.1, 1.7),
"transitions": PackedFloat32Array(3.03144, 1),
"update": 0,
"values": [Color(0.78, 0.61789, 0.4446, 0.941176), Color(0.78, 0.61789, 0.4446, 0)]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("../Dust:scale")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(1.1, 1.7),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1.6875, 1.6875), Vector2(3.29597, 3.29597)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("../Dust:rotation")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(1.1, 1.7),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 2.30034]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("../Dust:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(1.1, 1.7),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(334, 639), Vector2(282, 619)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("AnimationPlayer:speed_scale")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.0]
}
tracks/12/type = "method"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("..")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(),
"transitions": PackedFloat32Array(),
"values": []
}

[sub_resource type="Animation" id="Animation_v0bd1"]
resource_name = "sweep_stop"
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../Dust:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../Dust2:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_rpar7"]
_data = {
"RESET": SubResource("Animation_cxu1q"),
"Shiver": SubResource("Animation_newh3"),
"sweep": SubResource("Animation_1je5g"),
"sweep_stop": SubResource("Animation_v0bd1")
}

[sub_resource type="Shader" id="Shader_maq53"]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;
uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : source_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{

	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );

	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);

	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;

	// Apply the noise pattern (i.e. create the rays)
	float rays;

	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}

	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right

	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;

	COLOR = vec4(shine, rays * color.a);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2ec88"]
resource_local_to_scene = true
shader = SubResource("Shader_maq53")
shader_parameter/angle = -0.3
shader_parameter/position = -0.2
shader_parameter/spread = 0.32
shader_parameter/cutoff = 0.133
shader_parameter/falloff = 0.97
shader_parameter/edge_fade = 0.183
shader_parameter/speed = 1.0
shader_parameter/ray1_density = 8.0
shader_parameter/ray2_density = 30.0
shader_parameter/ray2_intensity = 0.382
shader_parameter/color = Color(1, 0.9, 0.65, 0.8)
shader_parameter/hdr = false
shader_parameter/seed = 5.0

[sub_resource type="Animation" id="Animation_o3dgc"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [20]
}

[sub_resource type="Animation" id="Animation_gpk0m"]
resource_name = "kappa"
length = 0.8
loop_mode = 1
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [20, 21, 22, 23, 24, 25, 26, 27]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_u7eh1"]
_data = {
"RESET": SubResource("Animation_o3dgc"),
"kappa": SubResource("Animation_gpk0m")
}

[sub_resource type="Animation" id="Animation_bvau8"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [20]
}

[sub_resource type="Animation" id="Animation_fd5n2"]
resource_name = "kappa2"
length = 0.8
loop_mode = 1
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [20, 21, 22, 23, 24, 25, 26, 27]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_78au8"]
_data = {
"RESET": SubResource("Animation_bvau8"),
"kappa2": SubResource("Animation_fd5n2")
}

[sub_resource type="Gradient" id="Gradient_3ll1r"]
offsets = PackedFloat32Array(0.00740741, 1)
colors = PackedColorArray(0, 0.149333, 0.28, 0.309804, 1, 1, 1, 0.223529)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_khu08"]
gradient = SubResource("Gradient_3ll1r")

[sub_resource type="Environment" id="Environment_xutyv"]
background_mode = 3
reflected_light_source = 2
glow_intensity = 0.78
glow_bloom = 0.16
glow_hdr_scale = 2.67
glow_hdr_luminance_cap = 38.95
adjustment_enabled = true
adjustment_contrast = 1.26
adjustment_color_correction = SubResource("GradientTexture1D_khu08")

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_x5688"]
particles_animation = true
particles_anim_h_frames = 4
particles_anim_v_frames = 1
particles_anim_loop = false

[sub_resource type="Gradient" id="Gradient_ubmgc"]
offsets = PackedFloat32Array(0, 0.528455, 1)
colors = PackedColorArray(1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_yqpo3"]
gradient = SubResource("Gradient_ubmgc")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_ijnob"]
particle_flag_disable_z = true
emission_shape = 3
emission_box_extents = Vector3(1280, 720, 1)
spread = 20.0
initial_velocity_min = 20.0
initial_velocity_max = 80.0
angular_velocity_min = -1.60933e-05
angular_velocity_max = 50.0
gravity = Vector3(0, 10, 0)
scale_min = 1.5
scale_max = 2.0
color_ramp = SubResource("GradientTexture1D_yqpo3")
anim_offset_max = 1.0

[sub_resource type="Shader" id="Shader_jfjmu"]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform sampler2D mask;
uniform float scale : hint_range(0.0, 1.0, 0.1);
void fragment() {
	float s = scale * 75.0f;
	//float s = scale == 0.0 ? 0.0 : pow(2.0, 10.0 * scale - 10.0);
	//s += 75.0f;
	int cutoff = int(s/75.0f);
	vec2 offset = vec2(0.5, 0.5) * (1.0 - s);
	vec4 mask_color = texture(mask, UV * s + offset);
	COLOR.a = COLOR.a - mask_color.a + float(cutoff);
}

//void light() {
	// Called for every pixel for every light affecting the CanvasItem.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_yscm4"]
resource_local_to_scene = true
shader = SubResource("Shader_jfjmu")
shader_parameter/scale = 0.0
shader_parameter/mask = ExtResource("24_6mb7l")

[node name="Title" type="Node2D"]
script = ExtResource("1_xhony")

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = SubResource("AudioStreamRandomizer_p2qx4")
pitch_scale = 1.4

[node name="AudioStreamPlayer2D2" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("5_orp8j")

[node name="SplashScreen" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_5gt7b")
}
autoplay = "Start"
speed_scale = 0.7

[node name="Cutscene" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_6eflu")
}

[node name="Foliage" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_5j0b3")
position = Vector2(629, 348)
scale = Vector2(4.13438, 4.07222)
texture = ExtResource("1_ckhxw")

[node name="Trunk" parent="." instance=ExtResource("2_vga1q")]
material = SubResource("ShaderMaterial_xt8vo")
position = Vector2(204, 230)
texture = null

[node name="Trunk2" parent="." instance=ExtResource("2_vga1q")]
material = SubResource("ShaderMaterial_dvxt8")
position = Vector2(695, 321)
texture = null

[node name="Shrine" type="Sprite2D" parent="."]
position = Vector2(638, 357)
scale = Vector2(4, 4)
texture = ExtResource("2_2j4ax")

[node name="MikoSweep" type="Sprite2D" parent="."]
position = Vector2(382, 543)
rotation = 0.53058
scale = Vector2(4, 4)
texture = ExtResource("1_t67nd")
hframes = 5
script = ExtResource("6_l5kyv")

[node name="Broom" type="Sprite2D" parent="MikoSweep"]
position = Vector2(-1.25, 9)
texture = ExtResource("2_wmbyw")
offset = Vector2(2.25, -10)

[node name="AnimationPlayer" type="AnimationPlayer" parent="MikoSweep"]
libraries = {
"": SubResource("AnimationLibrary_rpar7")
}
speed_scale = 4.0

[node name="Node2D" parent="." instance=ExtResource("7_4v4wb")]
material = SubResource("ShaderMaterial_2ec88")
position = Vector2(40, 113)

[node name="ColorRect" parent="Node2D" index="0"]
offset_left = -59.0
offset_right = 602.0
offset_bottom = 559.0

[node name="BarrelBack" type="Sprite2D" parent="."]
position = Vector2(945, 569)
scale = Vector2(4, 4)
texture = ExtResource("9_epeak")

[node name="KappaFullAnim" type="Sprite2D" parent="."]
visible = false
position = Vector2(950, 544)
scale = Vector2(4, 4)
texture = ExtResource("18_y8ji2")
hframes = 10
vframes = 4
frame = 20

[node name="BarrelLid" type="Sprite2D" parent="KappaFullAnim"]
position = Vector2(-1.5, -3.75)
texture = ExtResource("10_q7tfm")

[node name="AnimationPlayer" type="AnimationPlayer" parent="KappaFullAnim"]
libraries = {
"": SubResource("AnimationLibrary_u7eh1")
}
speed_scale = 2.0

[node name="KappaFullAnim2" type="Sprite2D" parent="."]
z_index = 1
position = Vector2(-260, 567)
scale = Vector2(4, 4)
texture = ExtResource("18_y8ji2")
hframes = 10
vframes = 4
frame = 20

[node name="AnimationPlayer" type="AnimationPlayer" parent="KappaFullAnim2"]
libraries = {
"": SubResource("AnimationLibrary_78au8")
}
autoplay = "kappa2"
speed_scale = 2.0

[node name="Barrel" type="Sprite2D" parent="."]
position = Vector2(945, 569)
scale = Vector2(4, 4)
texture = ExtResource("9_qkset")
hframes = 2

[node name="Brush" type="Sprite2D" parent="."]
self_modulate = Color(0.627451, 0.141176, 0.141176, 1)
position = Vector2(1721, 492)
rotation = 1.5708
scale = Vector2(2.61527, 2.61527)
texture = ExtResource("3_1utxv")

[node name="MirrorMiko" type="Sprite2D" parent="Brush"]
position = Vector2(-124.652, 27.9135)
rotation = -1.5708
scale = Vector2(0.19, 0.19)
texture = ExtResource("4_6jovv")

[node name="Label" type="Label" parent="Brush"]
modulate = Color(1, 1, 0.905882, 1)
offset_left = -26.0007
offset_top = 120.447
offset_right = 199.999
offset_bottom = 173.447
rotation = -1.5708
scale = Vector2(0.8, 0.8)
theme_override_fonts/font = ExtResource("11_6i0x2")
theme_override_font_sizes/font_size = 17
text = "Press Any Button"
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 1

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_xutyv")

[node name="Dust" type="Sprite2D" parent="."]
modulate = Color(0.78, 0.61789, 0.4446, 0.941176)
position = Vector2(334, 639)
scale = Vector2(1.6875, 1.6875)
texture = ExtResource("8_3auyt")

[node name="Dust2" type="Sprite2D" parent="."]
modulate = Color(0.78, 0.61789, 0.4446, 0.941176)
position = Vector2(441, 633)
scale = Vector2(4, 4)
texture = ExtResource("8_3auyt")

[node name="GPUParticles2D" type="GPUParticles2D" parent="."]
material = SubResource("CanvasItemMaterial_x5688")
position = Vector2(462, 353)
amount = 100
process_material = SubResource("ParticleProcessMaterial_ijnob")
texture = ExtResource("9_od2by")
lifetime = 10.0

[node name="UI" type="Control" parent="."]
visible = false
layout_mode = 3
anchors_preset = 0
offset_left = 937.0
offset_top = 319.0
offset_right = 977.0
offset_bottom = 359.0
scale = Vector2(2, 2)

[node name="MainMenu" type="MarginContainer" parent="UI"]
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="HFlowContainer" type="HFlowContainer" parent="UI/MainMenu"]
layout_mode = 2
alignment = 1

[node name="StartGame" type="Button" parent="UI/MainMenu/HFlowContainer"]
layout_mode = 2
text = "Start Game"

[node name="Settings" type="Button" parent="UI/MainMenu/HFlowContainer"]
layout_mode = 2
text = "Settings"

[node name="ExitGame" type="Button" parent="UI/MainMenu/HFlowContainer"]
layout_mode = 2
text = "Exit Game"

[node name="Settings" type="MarginContainer" parent="UI"]
visible = false
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="HFlowContainer" type="HFlowContainer" parent="UI/Settings"]
layout_mode = 2
alignment = 1

[node name="Fullscreen" type="Button" parent="UI/Settings/HFlowContainer"]
layout_mode = 2
text = "Fullscreen
"

[node name="Back" type="Button" parent="UI/Settings/HFlowContainer"]
layout_mode = 2
text = "Back"

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
modulate = Color(0, 0, 0, 1)
offset_left = -83.0
offset_top = -31.0
offset_right = 1384.0
offset_bottom = 763.0
color = Color(0, 0, 0, 1)

[node name="Beretparadelogo" type="Sprite2D" parent="."]
modulate = Color(1, 1, 1, 0)
position = Vector2(613, 395)
scale = Vector2(0.451852, 0.451852)
texture = ExtResource("11_t3nwi")

[node name="Marker2D" type="Marker2D" parent="."]
position = Vector2(1125, 492)

[node name="SFXbutt" type="Button" parent="."]
visible = false
self_modulate = Color(1, 1, 1, 0)
offset_left = 1207.0
offset_top = 579.0
offset_right = 1276.0
offset_bottom = 647.0

[node name="Music" type="Sprite2D" parent="SFXbutt"]
position = Vector2(35, 34)
scale = Vector2(2, 2)
texture = ExtResource("15_nsuj6")
hframes = 2

[node name="BGMbutt" type="Button" parent="."]
visible = false
self_modulate = Color(1, 1, 1, 0)
offset_left = 1207.0
offset_top = 648.0
offset_right = 1276.0
offset_bottom = 716.0

[node name="Sound" type="Sprite2D" parent="BGMbutt"]
position = Vector2(35, 33)
scale = Vector2(2, 2)
texture = ExtResource("16_6tcal")
hframes = 2

[node name="Camera2D2" type="Camera2D" parent="."]
position = Vector2(640, 360)

[node name="Transition2" parent="." instance=ExtResource("22_4jrs0")]
material = SubResource("ShaderMaterial_yscm4")
offset_right = 1280.0
offset_bottom = 720.0

[connection signal="animation_finished" from="Cutscene" to="." method="_on_cutscene_animation_finished"]
[connection signal="pressed" from="UI/MainMenu/HFlowContainer/StartGame" to="." method="_on_start_game_pressed"]
[connection signal="pressed" from="UI/MainMenu/HFlowContainer/Settings" to="." method="_on_settings_pressed"]
[connection signal="pressed" from="UI/MainMenu/HFlowContainer/ExitGame" to="." method="_on_exit_game_pressed"]
[connection signal="pressed" from="UI/Settings/HFlowContainer/Fullscreen" to="." method="_on_fullscreen_pressed"]
[connection signal="pressed" from="UI/Settings/HFlowContainer/Back" to="." method="_on_back_pressed"]
[connection signal="pressed" from="SFXbutt" to="." method="_on_button_pressed"]
[connection signal="pressed" from="SFXbutt" to="." method="_on_sf_xbutt_pressed"]
[connection signal="pressed" from="BGMbutt" to="." method="_on_bg_mbutt_pressed"]

[editable path="Node2D"]
