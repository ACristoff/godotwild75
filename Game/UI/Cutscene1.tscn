[gd_scene load_steps=61 format=3 uid="uid://gf3gsbcweern"]

[ext_resource type="Texture2D" uid="uid://67c1bv3fuim4" path="res://Assets/UserInterface/Menu/Staircase.png" id="1_hlg64"]
[ext_resource type="Script" path="res://Game/UI/cutscene_1.gd" id="1_jqtqn"]
[ext_resource type="Texture2D" uid="uid://1gsgwrxvici6" path="res://Assets/Environment/Objects/Foliage.png" id="2_5t8jd"]
[ext_resource type="PackedScene" uid="uid://bat17sfqaplx7" path="res://Assets/Shaders/sakuratree.tscn" id="3_snj5q"]
[ext_resource type="Texture2D" uid="uid://bxekefya4wylu" path="res://Assets/UserInterface/Menu/Mt.-Fuji-Snow-Cap-David-Hsu.jpg" id="3_wwa2p"]
[ext_resource type="Texture2D" uid="uid://lf5ircidgcgc" path="res://Assets/Characters/Hostile/Kappa_full_anim.png" id="5_8e1ml"]
[ext_resource type="Texture2D" uid="uid://bqbrmw5f2o2n8" path="res://Assets/Environment/Objects/Railing.png" id="5_qwmaq"]
[ext_resource type="Texture2D" uid="uid://cvac1rhk2c816" path="res://Assets/Characters/Friendly/MikoSweep.png" id="5_yogdq"]
[ext_resource type="Texture2D" uid="uid://cp1i2rrme4saq" path="res://Assets/Environment/Objects/Petals.png" id="6_625x3"]
[ext_resource type="PackedScene" uid="uid://b5wuajjdswd23" path="res://Assets/Effects/transition.tscn" id="7_0t3bk"]
[ext_resource type="Shader" path="res://Assets/Shaders/transition.gdshader" id="8_amo7s"]
[ext_resource type="Texture2D" uid="uid://bjx2labdxfhtt" path="res://Assets/UserInterface/Menu/FlameTransition.png" id="9_2dcsm"]
[ext_resource type="Shader" path="res://Assets/Shaders/speed.gdshader" id="10_5royo"]
[ext_resource type="AudioStream" uid="uid://4iv2athdrrg1" path="res://Assets/Audio/Music/Intro_Cutscene.mp3" id="11_s8hc8"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0l15r"]

[sub_resource type="Curve2D" id="Curve2D_qhojd"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1536, 1536)
}
point_count = 2

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_wr5ar"]
particles_animation = true
particles_anim_h_frames = 4
particles_anim_v_frames = 1
particles_anim_loop = false

[sub_resource type="Gradient" id="Gradient_korho"]
offsets = PackedFloat32Array(0, 0.276423, 1)
colors = PackedColorArray(1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_2qn36"]
gradient = SubResource("Gradient_korho")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_sdqw3"]
particle_flag_disable_z = true
emission_shape = 3
emission_box_extents = Vector3(1280, 720, 1)
direction = Vector3(-1, 0, 0)
spread = 0.0
initial_velocity_min = 800.0
initial_velocity_max = 800.0
angular_velocity_min = -1.60933e-05
angular_velocity_max = 50.0
gravity = Vector3(0, 10, 0)
scale_min = 1.5
scale_max = 2.0
color_ramp = SubResource("GradientTexture1D_2qn36")
anim_offset_max = 1.0

[sub_resource type="Animation" id="Animation_008r4"]
resource_name = "Miko"
length = 2.2
loop_mode = 1
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(2, 0), Vector2(0, 0), Vector2(-2, 0), Vector2(0, 0), Vector2(2, 0), Vector2(0, 0), Vector2(-2, 0), Vector2(0, 0), Vector2(2, 0), Vector2(0, 0), Vector2(-2, 0), Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1.2),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="Animation" id="Animation_y0ebg"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(2, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_du4a6"]
_data = {
"Miko": SubResource("Animation_008r4"),
"RESET": SubResource("Animation_y0ebg")
}

[sub_resource type="Animation" id="Animation_b7hqf"]
resource_name = "Miko"
length = 20.0
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(5, 6, 7, 7.3, 10.7, 10.9, 13.2, 13.3, 13.6, 15.6, 16.1, 16.5, 20),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(-42.4264, -22.6271), Vector2(-60.1041, -31.8195), Vector2(-60.1041, -31.8195), Vector2(-44.5477, -13.4347), Vector2(-44.5477, -13.4347), Vector2(-26.8701, -4.2423), Vector2(4.94975, 12.0212), Vector2(62.2254, 50.912), Vector2(101.116, 81.3176), Vector2(101.116, 81.3176), Vector2(9.8995, 56.5689), Vector2(-43.8406, 0.000352859), Vector2(-84.1457, -7.77783)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(5, 6, 7, 7.3, 10.7, 10.9, 13.2, 13.3, 13.6, 15.6, 16.1, 16.5, 20),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [-1.5708, -1.90066, -2.06647, -1.5708, -1.5708, -1.24093, -1.07512, -0.745256, 1.56905, 1.56905, 2.06472, 2.39459, 6.28319]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../KappaFullAnim2:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(6.7, 7, 7.3, 9.9, 10.1, 10.3, 10.5, 13.6, 13.7, 15.8, 16.1, 16.5, 20),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.307178, 0.0, 0.0, 1.07338, 3.98459, 1.22697, 1.22697, 0.0, 0.0, 1.5324, 4.5972, 6.28319]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../KappaFullAnim2:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(6.7, 7, 7.3, 9.9, 10, 10.1, 10.3, 10.5, 10.7, 13.6, 13.7, 15.8, 16.1, 16.5, 20),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.210224, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(12.0208, 40.3054), Vector2(9.19239, 9.19273), Vector2(4.94975, 38.8912), Vector2(4.94975, 38.8912), Vector2(27.5772, 48.7907), Vector2(21.2132, 79.1963), Vector2(14.1421, 82.0247), Vector2(-33.9411, 77.7821), Vector2(-679.53, 78.4892), Vector2(-679.53, 78.4892), Vector2(-712.057, 37.477), Vector2(-42.4324, 38.1841), Vector2(-160.513, -88.388), Vector2(-176.07, -150.613), Vector2(-214.96, -408.707)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../KappaFullAnim3:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(9.9, 10.3, 10.5, 10.7, 13.6, 13.7, 15.8, 16.1, 16.5, 20),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 0.277392, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(-84.1457, 40.3054), Vector2(-84.1457, 40.3054), Vector2(-84.1457, 40.3054), Vector2(-678.823, 53.7405), Vector2(-678.823, 53.7405), Vector2(-802.566, 40.3054), Vector2(-135.057, 33.2344), Vector2(-289.207, -6.36364), Vector2(-360.624, -43.8403), Vector2(-615.183, -83.4383)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../KappaFullAnim3:rotation")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(9.9, 10.3, 10.5, 13.7, 15.8, 16.1, 16.5, 20),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, 0.0, 0.7662, 0.0, 0.0, -0.612611, -3.52382, 6.28319]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath(".:frame")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(5, 11.5, 12, 12.1, 12.7, 12.8, 12.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [4, 2, 4, 2, 2, 4, 2]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Transition:material:shader_parameter/scale")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 1.5, 18, 19.5),
"transitions": PackedFloat32Array(0.392292, 1, 3.86374, 1),
"update": 0,
"values": [1.0, 0.0, 0.0, 1.0]
}
tracks/8/type = "method"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("../../../..")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(1.5),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"_song"
}]
}

[sub_resource type="Animation" id="Animation_ixshm"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-42.4264, -22.6271)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [-1.5708]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../KappaFullAnim2:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../KappaFullAnim2:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(12.0208, 40.3054)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../KappaFullAnim3:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-84.1457, 40.3054)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../KappaFullAnim3:rotation")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath(".:frame")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [2]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Transition:material:shader_parameter/scale")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_4j0ke"]
_data = {
"Miko": SubResource("Animation_b7hqf"),
"RESET": SubResource("Animation_ixshm")
}

[sub_resource type="FastNoiseLite" id="FastNoiseLite_7os7l"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_283lw"]
noise = SubResource("FastNoiseLite_7os7l")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_isbi7"]
shader = ExtResource("10_5royo")
shader_parameter/line_color_a = Color(1, 0.7, 0.935, 0.027451)
shader_parameter/line_color_b = Color(0.89, 0.998167, 1, 0.129412)
shader_parameter/back_color = Color(0.93, 0.93, 0.93, 0.27451)
shader_parameter/line_threshold = 0.14
shader_parameter/speed = 1.0
shader_parameter/line_length = 200.0
shader_parameter/angle = 0.0
shader_parameter/noise = SubResource("NoiseTexture2D_283lw")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_gthbg"]
resource_local_to_scene = true
shader = ExtResource("8_amo7s")
shader_parameter/scale = 0.0
shader_parameter/mask = ExtResource("9_2dcsm")

[sub_resource type="Animation" id="Animation_bvau8"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [20]
}

[sub_resource type="Animation" id="Animation_fd5n2"]
resource_name = "kappa2"
length = 0.8
loop_mode = 1
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [20, 21, 22, 23, 24, 25, 26, 27]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_78au8"]
_data = {
"RESET": SubResource("Animation_bvau8"),
"kappa2": SubResource("Animation_fd5n2")
}

[sub_resource type="Shader" id="Shader_qhg4r"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nfi1e"]
resource_local_to_scene = true
shader = SubResource("Shader_qhg4r")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_e804p"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fy745"]
resource_local_to_scene = true
shader = SubResource("Shader_e804p")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_rl0ys"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4xm05"]
resource_local_to_scene = true
shader = SubResource("Shader_rl0ys")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_0hvny"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qj476"]
resource_local_to_scene = true
shader = SubResource("Shader_0hvny")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_gfqlv"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ft47d"]
resource_local_to_scene = true
shader = SubResource("Shader_gfqlv")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_3olfl"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_p7yye"]
resource_local_to_scene = true
shader = SubResource("Shader_3olfl")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_8ft04"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7y62h"]
resource_local_to_scene = true
shader = SubResource("Shader_8ft04")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_sy1mt"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_u2neq"]
resource_local_to_scene = true
shader = SubResource("Shader_sy1mt")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_7ml50"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7jr2w"]
resource_local_to_scene = true
shader = SubResource("Shader_7ml50")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_in382"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5v8yx"]
resource_local_to_scene = true
shader = SubResource("Shader_in382")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_img1d"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hxils"]
resource_local_to_scene = true
shader = SubResource("Shader_img1d")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = null
shader_parameter/heightOffset = null
shader_parameter/offset = 0.0

[sub_resource type="Shader" id="Shader_hwd36"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_phnpd"]
resource_local_to_scene = true
shader = SubResource("Shader_hwd36")
shader_parameter/speed = 8.0
shader_parameter/minStrength = 0.05
shader_parameter/maxStrength = 0.01
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 7.0
shader_parameter/detail = 1.0
shader_parameter/distortion = 1.0
shader_parameter/heightOffset = 0.0
shader_parameter/offset = 0.0

[sub_resource type="Gradient" id="Gradient_exeke"]
offsets = PackedFloat32Array(0.00740741, 1)
colors = PackedColorArray(0, 0.149333, 0.28, 0.309804, 1, 1, 1, 0.223529)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_lu7ek"]
gradient = SubResource("Gradient_exeke")

[sub_resource type="Environment" id="Environment_v2f5s"]
background_mode = 3
reflected_light_source = 2
glow_enabled = true
glow_intensity = 0.78
glow_bloom = 0.16
glow_hdr_scale = 2.67
glow_hdr_luminance_cap = 38.95
adjustment_enabled = true
adjustment_contrast = 1.26
adjustment_color_correction = SubResource("GradientTexture1D_lu7ek")

[node name="Node2D" type="Node2D"]
script = ExtResource("1_jqtqn")

[node name="Foliage" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_0l15r")
position = Vector2(1075.46, 392.792)
rotation = 0.785398
scale = Vector2(14.2633, 6.35595)
texture = ExtResource("2_5t8jd")

[node name="Path2D" type="Path2D" parent="."]
curve = SubResource("Curve2D_qhojd")

[node name="PathFollow2D" type="PathFollow2D" parent="Path2D"]
rotation = 0.785398

[node name="Mt_-fuji-snow-cap-david-hsu" type="Sprite2D" parent="Path2D/PathFollow2D"]
position = Vector2(43.1334, -211.425)
rotation = -0.785398
texture = ExtResource("3_wwa2p")

[node name="Camera2D" type="Camera2D" parent="Path2D/PathFollow2D"]
z_index = 20
position = Vector2(0, -255.973)

[node name="GPUParticles2D" type="GPUParticles2D" parent="Path2D/PathFollow2D/Camera2D"]
material = SubResource("CanvasItemMaterial_wr5ar")
amount = 200
process_material = SubResource("ParticleProcessMaterial_sdqw3")
texture = ExtResource("6_625x3")
lifetime = 10.0

[node name="MikoSweep" type="Sprite2D" parent="Path2D/PathFollow2D/Camera2D"]
position = Vector2(-42.4264, -22.6271)
rotation = -1.5708
scale = Vector2(4, 4)
texture = ExtResource("5_yogdq")
offset = Vector2(2, 0)
flip_h = true
hframes = 5
frame = 2

[node name="MikoStruggle" type="AnimationPlayer" parent="Path2D/PathFollow2D/Camera2D/MikoSweep"]
libraries = {
"": SubResource("AnimationLibrary_du4a6")
}
autoplay = "Miko"
speed_scale = 2.0

[node name="Custscene2" type="AnimationPlayer" parent="Path2D/PathFollow2D/Camera2D/MikoSweep"]
libraries = {
"": SubResource("AnimationLibrary_4j0ke")
}
autoplay = "Miko"

[node name="ColorRect2" type="ColorRect" parent="Path2D/PathFollow2D/Camera2D"]
material = SubResource("ShaderMaterial_isbi7")
offset_left = -752.0
offset_top = -767.0
offset_right = 1047.0
offset_bottom = 756.0
mouse_filter = 2

[node name="Transition" parent="Path2D/PathFollow2D/Camera2D" instance=ExtResource("7_0t3bk")]
material = SubResource("ShaderMaterial_gthbg")
offset_left = -707.107
offset_top = 197.99
offset_right = 572.893
offset_bottom = 917.99
rotation = -0.785398

[node name="KappaFullAnim2" type="Sprite2D" parent="Path2D/PathFollow2D/Camera2D"]
z_index = -1
position = Vector2(12.0208, 40.3054)
scale = Vector2(4, 4)
texture = ExtResource("5_8e1ml")
hframes = 10
vframes = 4
frame = 20

[node name="AnimationPlayer" type="AnimationPlayer" parent="Path2D/PathFollow2D/Camera2D/KappaFullAnim2"]
libraries = {
"": SubResource("AnimationLibrary_78au8")
}
autoplay = "kappa2"
speed_scale = 4.0

[node name="KappaFullAnim3" type="Sprite2D" parent="Path2D/PathFollow2D/Camera2D"]
z_index = -1
position = Vector2(-84.1457, 40.3054)
scale = Vector2(4, 4)
texture = ExtResource("5_8e1ml")
hframes = 10
vframes = 4
frame = 20

[node name="AnimationPlayer" type="AnimationPlayer" parent="Path2D/PathFollow2D/Camera2D/KappaFullAnim3"]
libraries = {
"": SubResource("AnimationLibrary_78au8")
}
autoplay = "kappa2"
speed_scale = 4.0

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="Path2D/PathFollow2D/Camera2D"]
position = Vector2(0, 255.973)
rotation = -0.785398
stream = ExtResource("11_s8hc8")

[node name="Node2D" type="Node2D" parent="Path2D/PathFollow2D"]
position = Vector2(287.085, -31.1127)
rotation = -0.785398
scale = Vector2(1.6913, 1.6913)

[node name="Trunk5" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_nfi1e")
position = Vector2(-58.5347, -89.2802)
scale = Vector2(0.6, 0.6)

[node name="Leaves2" parent="Path2D/PathFollow2D/Node2D/Trunk5" index="0"]
modulate = Color(1, 1, 1, 0.666667)

[node name="Trunk11" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_fy745")
position = Vector2(-145.45, -89.2802)
scale = Vector2(0.6, 0.6)

[node name="Leaves2" parent="Path2D/PathFollow2D/Node2D/Trunk11" index="0"]
modulate = Color(1, 1, 1, 0.666667)

[node name="Trunk6" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_4xm05")
position = Vector2(28.3805, -89.2802)
scale = Vector2(0.6, 0.6)

[node name="Leaves2" parent="Path2D/PathFollow2D/Node2D/Trunk6" index="0"]
self_modulate = Color(1, 1, 1, 0.666667)

[node name="Trunk7" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_qj476")
position = Vector2(110.566, -89.2802)
scale = Vector2(0.6, 0.6)

[node name="Leaves2" parent="Path2D/PathFollow2D/Node2D/Trunk7" index="0"]
self_modulate = Color(1, 1, 1, 0.666667)

[node name="Trunk8" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_ft47d")
position = Vector2(192.751, -89.2802)
scale = Vector2(0.6, 0.6)

[node name="Leaves2" parent="Path2D/PathFollow2D/Node2D/Trunk8" index="0"]
self_modulate = Color(1, 1, 1, 0.666667)

[node name="Trunk9" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_p7yye")
position = Vector2(270.206, -89.2802)
scale = Vector2(0.6, 0.6)

[node name="Leaves2" parent="Path2D/PathFollow2D/Node2D/Trunk9" index="0"]
self_modulate = Color(1, 1, 1, 0.666667)

[node name="Trunk10" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_7y62h")
position = Vector2(342.931, -89.2802)
scale = Vector2(0.6, 0.6)

[node name="Leaves2" parent="Path2D/PathFollow2D/Node2D/Trunk10" index="0"]
self_modulate = Color(1, 1, 1, 0.666667)

[node name="Trunk" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_u2neq")
position = Vector2(0, 0)
scale = Vector2(1, 1)

[node name="Trunk2" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_7jr2w")
position = Vector2(112.931, 0)
scale = Vector2(1, 1)

[node name="Trunk3" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_5v8yx")
position = Vector2(214.627, 1.80438e-05)
scale = Vector2(1, 1)

[node name="Trunk4" parent="Path2D/PathFollow2D/Node2D" instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_hxils")
position = Vector2(325.193, 1.80438e-05)
scale = Vector2(1, 1)

[node name="Trunk4" parent="." instance=ExtResource("3_snj5q")]
material = SubResource("ShaderMaterial_phnpd")
position = Vector2(1111, 598)

[node name="railing" type="Node2D" parent="."]
position = Vector2(-116, -525)
rotation = 0.785398
scale = Vector2(4, 4)

[node name="Railing" type="Sprite2D" parent="railing"]
position = Vector2(51.9724, -7.62939e-06)
texture = ExtResource("5_qwmaq")

[node name="Railing3" type="Sprite2D" parent="railing"]
position = Vector2(316.43, -7.62939e-06)
texture = ExtResource("5_qwmaq")

[node name="Railing2" type="Sprite2D" parent="railing"]
position = Vector2(595.03, -2.28882e-05)
texture = ExtResource("5_qwmaq")

[node name="Staircase" type="Sprite2D" parent="."]
position = Vector2(640, 128)
scale = Vector2(4, 4)
texture = ExtResource("1_hlg64")

[node name="Staircase2" type="Sprite2D" parent="."]
position = Vector2(1408, 896)
scale = Vector2(4, 4)
texture = ExtResource("1_hlg64")

[node name="Staircase3" type="Sprite2D" parent="."]
position = Vector2(2176, 1664)
scale = Vector2(4, 4)
texture = ExtResource("1_hlg64")

[node name="Staircase4" type="Sprite2D" parent="."]
position = Vector2(-128, -640)
scale = Vector2(4, 4)
texture = ExtResource("1_hlg64")

[node name="ColorRect" type="ColorRect" parent="."]
offset_top = 768.0
offset_right = 768.0
offset_bottom = 1536.0
color = Color(0.196078, 0.207843, 0.207843, 1)

[node name="ColorRect" type="ColorRect" parent="ColorRect"]
layout_mode = 0
offset_top = 768.0
offset_right = 768.0
offset_bottom = 1536.0
color = Color(0.196078, 0.207843, 0.207843, 1)

[node name="ColorRect" type="ColorRect" parent="ColorRect/ColorRect"]
layout_mode = 0
offset_left = 768.0
offset_right = 1536.0
offset_bottom = 768.0
color = Color(0.196078, 0.207843, 0.207843, 1)

[node name="ColorRect" type="ColorRect" parent="ColorRect/ColorRect/ColorRect"]
layout_mode = 0
offset_left = -1536.0
offset_top = -1536.0
offset_right = -768.0
offset_bottom = -768.0
color = Color(0.196078, 0.207843, 0.207843, 1)

[node name="ColorRect" type="ColorRect" parent="ColorRect/ColorRect/ColorRect/ColorRect"]
layout_mode = 0
offset_top = 768.0
offset_right = 768.0
offset_bottom = 1536.0
color = Color(0.196078, 0.207843, 0.207843, 1)

[node name="railing2" type="Node2D" parent="."]
visible = false
modulate = Color(0.4, 0.4, 0.4, 1)
position = Vector2(-217, -424)
rotation = 0.785398
scale = Vector2(5, 5)

[node name="Railing" type="Sprite2D" parent="railing2"]
texture = ExtResource("5_qwmaq")

[node name="Railing2" type="Sprite2D" parent="railing2"]
position = Vector2(315.723, 0)
texture = ExtResource("5_qwmaq")

[node name="Railing3" type="Sprite2D" parent="railing2"]
position = Vector2(631.446, 0)
texture = ExtResource("5_qwmaq")

[node name="Railing4" type="Sprite2D" parent="railing2"]
position = Vector2(947.17, -1.52588e-05)
texture = ExtResource("5_qwmaq")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_v2f5s")

[connection signal="animation_finished" from="Path2D/PathFollow2D/Camera2D/MikoSweep/Custscene2" to="." method="_on_custscene_2_animation_finished"]

[editable path="Path2D/PathFollow2D/Node2D/Trunk5"]
[editable path="Path2D/PathFollow2D/Node2D/Trunk11"]
[editable path="Path2D/PathFollow2D/Node2D/Trunk6"]
[editable path="Path2D/PathFollow2D/Node2D/Trunk7"]
[editable path="Path2D/PathFollow2D/Node2D/Trunk8"]
[editable path="Path2D/PathFollow2D/Node2D/Trunk9"]
[editable path="Path2D/PathFollow2D/Node2D/Trunk10"]
